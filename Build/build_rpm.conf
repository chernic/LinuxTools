#!/bin/sh
# @Chernic : 在运行rpmbuild -ba之前收集并整理相关变量
# @changelog
## 2018-09-30 Chernic <chernic AT qq.com>
#- 完善系统变量获取, 以支持i686
## 2018-09-13 Chernic <chernic AT qq.com>
#- 变量获取结果罗列对齐

## 环境变量
RPMTOP=/home/workspace/rpmbuild
ProjectName="buildrpm"
ProjectShort="chernic"
LogPath=/home/focustar/icip6/log/${ProjectShort}/

# 非root用户操作则退出
######################################################
function NotRootOut(){
    [ $(id -u) != "0" ] && echo "Error: You must be root to run this script" && exit 0
};NotRootOut;

# 双目录查询并加载系统script
######################################################
function LoadIcip6Scripts(){
    if [ -f /home/focustar/icip6/script/functions/function_log.sh ];then
        . /home/focustar/icip6/script/functions/function_log.sh
    else
        if [ -f ./function_log.sh ];then
            . ./function_log.sh
        else
            echo "Unfound /home/focustar/icip6/script/functions/function_log.sh.  Aborting." >&2; exit 1
        fi
    fi

    if [ -f /home/focustar/icip6/script/functions/function_restore.sh ];then
        . /home/focustar/icip6/script/functions/function_restore.sh
    else
        if [ -f ./function_restore.sh ];then
            . ./function_restore.sh
        else
            echo "Unfound /home/focustar/icip6/script/functions/function_restore.sh.  Aborting." >&2; exit 1
        fi
    fi
};LoadIcip6Scripts;

# 初始化Log日志
######################################################
function ConfigureLog(){
    if [ ! -e ${LogPath} ]; then mkdir -p ${LogPath}; fi
    LogFile=${LogPath}/${ProjectName}-$(basename $0).log
    LogError=${LogPath}/${ProjectName}-$(basename $0).error.log
    # restore 源自上面两个sh文件
    restore $LogFile 10240 10
};ConfigureLog;

# 获取系统版本
getSystemFlag(){
    sys_ver=$(uname -r | cut -d. -f4)
    sys_arch=$(uname -m)

    case "${sys_ver}.${sys_arch}" in
      el5.i*86) # i386 i686
        system_flag="el5.i386"
        ;;
      el5.x86_64)
        system_flag="el5.x86_64"
        ;;
      el6.i*86)# i386 i686
        system_flag="el6.i686"
        ;;
      el6.x86_64)
        system_flag="el6.x86_64"
        ;;
      *)
        echo "Error: This system version is not supported : ${sys_ver}"
        echo "Error: This system arch    is not supported : ${sys_arch}"
        exit 0
        ;;
    esac
}

# 检查命令
Checkcommand(){
    command -v "$1" >>  $LogFile;
    # 此命令支持空输入, 不必再次检查
    if [ $? != 0 ]; then
      return 1
    fi
    return 0
}

LOG_INFO "" $LogFile;
LOG_INFO "" $LogFile;
LOG_INFO "<<< HERE build rpm running " $LogFile;

rungetSystemFlag(){
    LOG_INFO "" $LogFile;
    LOG_INFO " ********************************************************" $LogFile;
    LOG_INFO " * getSystemFlag" $LogFile;
    LOG_INFO " *" $LogFile;
    getSystemFlag;
};
rungetSystemFlag;

LOG_WARN "sys_ver:${sys_ver}"     $LogFile;
LOG_WARN "sys_arch:${sys_arch}"    $LogFile;
LOG_WARN "system_flag:${system_flag}" $LogFile;

echo "%RPMTOP  ${RPMTOP}"    >~/.rpmmacros
# rpmbuild时避免生成debuginfo包 
echo "%debug_package %{nil}" >> ~/.rpmmacros
# rpmbuild --showrc
mkdir -p ${RPMTOP}/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

show_configure(){
echo RPMTOP=${RPMTOP}
echo RPMTOP_BUILD=${RPMTOP}/BUILD
echo RPMTOP_RPMS=${RPMTOP}/RPMS
echo RPMTOP_RPMS_ARCH=${RPMTOP}/RPMS/${sys_arch}
echo RPMTOP_SOURCES=${RPMTOP}/SOURCES
echo RPMTOP_SPECS=${RPMTOP}/SPECS
echo RPMTOP_SRPMS=${RPMTOP}/SRPMS
}


if [ -z ${DIRAndNAME} ];then
    echo "ERROR : DirName[${DIRAndNAME}] is NULL."
    exit -1
else
    if [ ! -f ${DIRAndNAME} ];then
        echo "ERROR : DirName[${DIRAndNAME}] is not Exited."
        exit -1
    else
        echo "Get Variables From [${DIRAndNAME}]."
    fi
fi

#####################################
# Information From String "./XXX/YYY-0.1.spec"
#####################################
# 【./XXX/YYY-0.1.spec】
echo "DIRAndNAME = ${DIRAndNAME}"

# ./XXX/【YYY-0.1.spec】
_SpecFile=${DIRAndNAME##*/}                         && [ ! -z ${_DirFile} ] && echo "   DIRFile = ${_DirFile}"

# ./【XXX】/YYY-0.1.spec
_DirName=${DIRAndNAME%%/*}                          && [ ! -z ${_DirName} ] && echo "   DirName = ${_DirName}"

# ./XXX/YYY-0.1.【spec】
_DirExct=${_DirFile##*.}                            && [ ! -z ${_DirExct} ] && echo "   DirExct = ${_DirExct}"


#####################################
# Information From File ./XXX/YYY-0.1.spec
#####################################
# _Summary=`awk '/Summary:/{print $2}' ${_DirName}/${_SpecFile{` && [ ! -z "${_Summary}" ] && echo "   Summary = ${_Summary}"
_Name=`awk '/^Name:/{print $2}'         ${_DirName}/${_SpecFile}` && [ ! -z "${_Name}" ]    && echo "   Name    = ${_Name}"
_Version=`awk '/^Version:/{print $2}'   ${_DirName}/${_SpecFile}` && [ ! -z "${_Version}" ] && echo "   Version = ${_Version}"
_Release=`awk '/^Release:/{print $2}'   ${_DirName}/${_SpecFile}` && [ ! -z "${_Release}" ] && echo "   Release = ${_Release}"
_Archite=`awk '/^BuildArch:/{print $2}' ${_DirName}/${_SpecFile}` && [ ! -z "${_Archite}" ] && echo "   Archite = ${_Archite}"
_License=`awk '/^License:/{print $2}'   ${_DirName}/${_SpecFile}` && [ ! -z "${_License}" ] && echo "   License = ${_License}"
#_URL=`awk '/URL:/{print $2}'          ${_DirName}/${_SpecFile}` && [ ! -z "${_URL}" ]     && echo "   URL     = ${_URL}"
_Prefix=`awk '/^Prefix:/{print $2}'     ${_DirName}/${_SpecFile}` && [ ! -z "${_Prefix}" ]  && echo "   Prefix  = ${_Prefix}"

_Source=`awk '/^Source:/{print $2}'     ${_DirName}/$_SpecFile |
        sed "s#%{name}#${_Name}#g" | 
        sed "s#%{Version}#${_Version}#g" | 
        sed "s#%{Release}#${_Release}#g" | 
        sed "s#%{Archite}#${_Archite}#g"` && [ ! -z ${_Source} ]  && echo "   Source  = ${_Source}"
