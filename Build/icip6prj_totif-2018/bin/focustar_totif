#!/bin/bash
#
#   /etc/rc.d/init.d/focustar_totif
#
# Starts the focustar_totif daemon
#
# chkconfig: 345 99 35
# description: Startup/shutdown script for the libreoffice/focustar_totif
# processname: focustar_totif
# pidfile: /var/run/samba/smbd.pid
# pidfile: /var/run/samba/nmbd.pid
# config: /etc/samba/smb.conf

### BEGIN INIT INFO
# Provides:           focustar_totif
# Required-Start:     $local_fs $remote_fs
# Required-Stop:      $local_fs $remote_fs
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  start and stop focustar_totif
# Description:        Startup/shutdown script for the libreoffice&focustar_totif
### END INIT INFO

### Common variables
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/home/focustar/icip6
SYS_HOME=${SYS_HOME-"/home/focustar/icip6"}
SYS_LOG_DIR=${SYS_LOG_DIR-"/home/focustar/icip6/log"}
SYS_CFG_DIR=${SYS_CFG_DIR-"/home/focustar/icip6/cfg"}
export SYS_LOG_DIR  SYS_CFG_DIR  LD_LIBRARY_PATH

# Totif 工程目录
SYS_PRJ=${SYS_PRJ-"/home/focustar/icip6prj_totif"}
SYS_PRJ_BIN=${SYS_PRJ_BIN-"${SYS_PRJ}/bin"}
SYS_PRJ_LIB=${SYS_PRJ_LIB-"${SYS_PRJ}/lib"}
SYS_PRJ_LIB=${SYS_PRJ_LIB-"${SYS_PRJ}/inc"}
SYS_PRJ_INITD=${SYS_PRJ_INITD-"${SYS_PRJ}/init.d"}

# LIBREOFFICE4
# RPM of libreoffice4.4
# OFFICE_HOME="/opt/libreoffice4.4"
# RPM of X64 in CentOS6
OFFICE_HOME="/usr/lib64/libreoffice"
OO_SDK_HOME="${OFFICE_HOME}/sdk"
OO_SDK_URE_HOME="${OFFICE_HOME}/ure-link"

### Default variables
libre_name=${libre_name-"Libre"}
libre_proc=${libre_proc-"soffice.bin"}
libre_path=${libre_path-"${OFFICE_HOME}/program"}
libre_pidfile=${libre_pidfile-"/var/run/${libre_name}.pid"}
libre_host=${libre_port-"127.0.0.1"}
libre_port=${libre_port-"8100"}
libre_options=${libre_options-"--headless --accept=\"socket,host=${libre_host},port=$libre_port;urp;\" --nofirststartwizard &"}
libre_lockfile="/var/lock/subsys/${libre_name}d"

totif_name=${totif_name-"TOTIF"}
totif_proc=${totif_proc-"TOTIFMain"}
totif_deamon=${totif_deamon-"daemonTOTIF"}
totif_path=${totif_path-"${SYS_PRJ}/bin"}
totif_pidfile=${totif_pidfile-"/var/run/${totif_deamon}.pid"}
totif_options=${totif_options-" &" }
totif_lockfile="/var/lock/subsys/${totif_deamon}d"



RETVAL=0

DAEMON_COREFILE_LIMIT='unlimited'

# Source function library.
if [ -f /etc/init.d/functions ] ; then
  . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
  . /etc/rc.d/init.d/functions
else
  echo "Linux LSB init function script or Redhat /etc/init.d/functions is required for this script."
  echo "See http://refspecs.linuxfoundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptfunc.html"
  exit 1
fi

#颜色
_NC='\e[0m'              # 没有颜色
_red='\e[0;31m'          # 红色
_RED='\e[1;31m'          # 红色+粗体（后面以此类推）
_green='\e[0;32m'        # 绿色
_GREEN='\e[1;32m'
_yellow='\e[0;33m'       # 黄色
_YELLOW='\e[1;33m'
_blue='\e[0;34m'         # 蓝色
_BLUE='\e[1;34m'
_purple='\e[0;35m'       # 紫色
_PURPLE='\e[1;35m'
_cyan='\e[0;36m'         # 蓝绿色
_CYAN='\e[1;36m'
#日期
_DATE="$(date '+%Y-%m-%d %H:%M:%S')"

function _ECHO(){
    local COLOR
    test -e $DEBUG && return 1
    case "$1" in
        "EROR")
            test 1 -le $DEBUG || return 1
            COLOR=${_red}
            ;;
        "WARN")
            test 2 -le $DEBUG || return 2
            COLOR=${_yellow}
            ;;
        "LOGG")
            test 3 -le $DEBUG || return 3
            COLOR=${_green}
            ;;
        "INFO")
            test 4 -le $DEBUG || return 4
            COLOR=${_NC}
            ;;
        *)
            return -2
            ;;
    esac
    echo -e "$COLOR$1${_NC}: $(date '+%Y-%m-%d %H:%M:%S') `printf %-18s "${0##*/}"` $2"
}

function Update_LD_LIBRARY(){
    [ ! -z ${OO_SDK_HOME} ]     && OO_SDK__LIB=${OO_SDK_HOME}/lib          || echo "ERROR: OO_SDK_HOME is null."
    [ ! -z ${OFFICE_HOME} ]     && OFFICE__URE=${OFFICE_HOME}/ure          || echo "ERROR: OFFICE_HOME is null."
    [ ! -z ${OO_SDK_URE_HOME} ] && OO_SDK_URE__LIB=${OO_SDK_URE_HOME}/lib  || echo "ERROR: OO_SDK_URE_HOME is null."
    [ ! -z ${SYS_PRJ} ]         && SYS_PRJ__LIB=${SYS_PRJ}/lib             || echo "ERROR: SYS_PRJ is null."
    [ ! -z ${SYS_PRJ} ]         && SYS_BOOSTLIB=${SYS_PRJ}/lib/boost       || echo "ERROR: SYS_PRJ is null."
    [ ! -z ${SYS_PRJ} ]         && SYS_GHOSTLIB=${SYS_PRJ}/lib/ghost       || echo "ERROR: SYS_PRJ is null."
    # [ ! -z ${SYS_PRJ} ]         && SYS_URE__LIB=${SYS_PRJ}/lib/ure         || echo "ERROR: SYS_PRJ is null."

    LD_LIBRARY_PATH=${OO_SDK__LIB}:${OFFICE__URE}:${OO_SDK_URE__LIB}::${LD_LIBRARY_PATH}
    LD_LIBRARY_PATH=${SYS_PRJ__LIB}:${SYS_BOOSTLIB}:${SYS_GHOSTLIB}:.:..:${LD_LIBRARY_PATH}
    export LD_LIBRARY_PATH

    return $?
}

# Check that we're a privileged user
[ `id -u` = 0 ] || exit 4

# Check if ${libre_path}/${libre_proc} is executable
if ! test -x "${libre_path}/${libre_proc}";then
    echo "Not Executable : ${libre_path}/${libre_proc}"
    exit 5
fi

# Check if ${totif_path}/${totif_deamon} is executable
if ! test -x "${totif_path}/${totif_deamon}";then
    echo "Not Executable : ${totif_path}/${totif_deamon}"
    exit 5
fi

# Check if ${totif_path}/${totif_proc} is executable
if ! test -x "${totif_path}/${totif_proc}";then
    echo "Not Executable : ${totif_path}/${totif_proc}"
    exit 5
fi

# ps -A |grep "cmdname"| awk '{print $1}'  # 完全相同，但是因为调用命令次数较多，性能上是不行的。
# pidof "cmdpath"/"cmdname"                # pidof 只能获取程序的文件名匹配到的进程号
# pgrep "cmdname"                          # pgrep跟1的效果相同，因为是单一命令，比第一种性能要好得多

start() {
    OLD_PATH=$(pwd)
    # echo "OLD_PATH=${OLD_PATH}"
    RETVAL1=1
    RETVAL2=1
    RETVAL3=1

    status $libre_proc >/dev/null
    if [[ ! $? -eq 0 ]];then
        echo -n "Starting ${libre_name} services(${libre_proc}): "
        cd ${libre_path}
        LANG=$HTTPD_LANG  daemon  ./${libre_proc}  ${libre_options}
        RETVAL1=$?
        [ "$RETVAL1" -eq 0 ] && success || failure
        echo
    else
        status $libre_proc
        RETVAL1=0
    fi

    status $totif_deamon >/dev/null
    if [[ ! $? -eq 0 ]];then
        echo -n "Starting ${totif_name} services(${totif_deamon}): "
        Update_LD_LIBRARY;

        cd ${totif_path}
        # Notice : "export MALLOC_CHECK_=0" in deamonTOTIF
        #          So, no *** glibc detected *** double free or corruption (!prev):错误
        LANG=$HTTPD_LANG  daemon  ./${totif_deamon}  ${totif_options} >${totif_deamon}.log 2>&1 
        # 直接返回判断
        # RETVAL3=$?
        # [ $RETVAL3 -eq 0 ] && success || failure

        status $totif_deamon >/dev/null
        # 简介检查判断(但是内存泄露, 进程未被杀死,依然返回0)
        RETVAL3=$?
        [ $RETVAL3 -eq 0 ] && success || failure

        echo
    else
        status ${totif_deamon}
        RETVAL3=0
    fi

    if [ 0 -eq "$RETVAL1" ];then
        touch ${libre_lockfile}
        if [ 0 -eq "$RETVAL3" ];then
            touch ${totif_lockfile}
        else
            # 假如只开启了soffice.bin
            stop >/dev/null 2>&1
            RETVAL=1
        fi
    else
        RETVAL=1
    fi
    
    cd ${OLD_PATH}
    # echo "PWD=$(pwd)"
    return $RETVAL
}

stop() {
    RETVAL=1
    RETVAL1=1
    RETVAL2=1
    RETVAL3=1
    
    # [ ! -e ${libre_lockfile} ] && echo "11111"
    # [ ! -e ${totif_lockfile} ] && echo "22222"
    
    if [ ! -e ${libre_lockfile} ]; then
        echo -n $"cannot stop ${libre_name}: ${libre_name} is not running."
        failure $"cannot stop ${libre_name}: ${libre_name} is not running."
        
        RETVAL1=1;
        echo
    else
        echo -n "Shutting down ${libre_name} services: "
        killproc ${libre_proc}
        RETVAL1=$?
        echo
    fi
    
    
    if [ ! -e ${totif_lockfile} ]; then
        echo -n $"cannot stop ${totif_name}: ${totif_name} is not running."
        failure $"cannot stop ${totif_name}: ${totif_name} is not running."
        
        RETVAL2=1;
        RETVAL3=1;
        echo
    else
        echo -n "Shutting down ${totif_name} services: "
        killproc ${totif_deamon}
        RETVAL2=$?
        
        killproc ${totif_proc}
        RETVAL3=$?
        echo
    fi

    [ $RETVAL1 -eq 0  ]                  && rm -f ${libre_lockfile} || RETVAL=1
    [ $RETVAL2 -eq 0 -a $RETVAL3 -eq 0 ] && rm -f ${totif_lockfile} || RETVAL=1

    return $RETVAL
}

restart() {
    stop
    start
}

case "$2" in
    -G)
        DEBUG=4
        VERIBLE=-v
        ;;
    *)
        :
        ;;
esac

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    condrestart)
        if [ -f ${libre_lockfile} -o -f ${totif_lockfile} ]; then
            restart
        fi
        ;;
    status)
        status $libre_proc; RETVAL1=$?
        status $totif_deamon; RETVAL2=$?
        status $totif_proc; RETVAL3=$?
        RETVAL=$[RETVAL1|RETVAL2|RETVAL3]
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|condrestart|status}"
        RETVAL=2
esac

exit $RETVAL
