#!/bin/sh
# @Chernic : 2018-10-26 ChangeTagOne 只修改从目标标签, 到下一个标签, 避免误修改

function NotRootOut(){
    [ $(id -u) != "0" ] && echo "Error: You must be root to run this script" && exit 0
};NotRootOut;
function LoadLogFile(){
#加载日志函数
if [ -z "$IS_LOADED_LOG_FUNC" ]; then
  LocalDir=`pwd`;
  source "${LocalDir}/log.sh";
  echo "load log function:${IS_LOADED_LOG_FUNC}!"
fi

if [ -z "$LogFile" ]; then
  LocalDir=`pwd`;
  LogPath="${LocalDir}/log";
  if [ ! -e ${LogPath} ]; then mkdir -p ${LogPath}; fi
  LogFile=${LogPath}/${ProjectName}-$(basename $0).log
  echo "" > $LogFile
fi
};LoadLogFile;

IsTagExisted(){
    test -e $1 || return 1
    test -n "$(grep -n '^\['$2'\]' $1)" && return 0 || return 1
}
AppendTagOne(){

cat >> $1 <<EOF
`printf %-16s "$2"`= $3
EOF

LOG_WARN "GobalAppend `printf %-16s "$2"` = $3" $LogFile;

}
ChangeTagOne(){
    LOG_WARN "Update `printf %-16s "$3"` = $4" $LogFile;
    ss=$(grep -n '^\['$2'\]' $1 | cut -d ':' -f 1)
    sd=$(sed -n "$ss, /^\[.*\]/=" $1 | tail -n 1)
    # 从目标标签, 到下一个标签
    sed -i  ${ss}","${sd}" s/$3.*/`printf %-16s "$3"`= $4/" $1
}
ChangeOrAppendOneTag(){
    ss=$(grep -n '^\['$2'\]' $1 | cut -d ':' -f 1)                             # 先搜索是否有标签
    sd=$(sed -n "$ss, /^\[.*\]/=" $1 | tail -n 1)                              # 搜不到标签后标签, 则自动等于行末
    [ -z $ss ]  && LOG_ERROR "$2 is not found in $1. EXIT!" $LogFile && exit 1

    # $3 之后增加一个空格, 以完全匹配
    sed -n "${ss},${sd}p" $1 | grep  "$3 .*" > /dev/null                       # 在检查是否有子项
    if [ $? == 0 ];then
        LOG_WARN "Change `printf %-16s "$3"` = $4" $LogFile;                   # 有则改之
        sed -i  ${ss}","${sd}"  s/$3 .*/`printf %-16s "$3"`= $4/" $1
    else
        LOG_WARN "Append `printf %-16s "$3"` = $4" $LogFile;                   # 无则加勉(加在主标签后面)
        sed -i  ${ss}","${sd}"  s/^\[$2\]/\[$2\]\n`printf %-16s "$3"`= $4/" $1
    fi
}
